name: Pull Request Test

on:
  pull_request:
    # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#pull_request
    # synchronize: 아직 검토 중인 pull request에 새로운 커밋이 추가되었을 때
    types: [ opened, synchronize, reopened ]

permissions: read-all

jobs:
  build-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4.1.7

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            application:
              - 'build.gradle'
              - 'src/**'

      - name: JDK 설치
        if: steps.changes.outputs.application == 'true'
        uses: actions/setup-java@v4.3.0
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'gradle'

      - name: Gradle Build
        if: steps.changes.outputs.application == 'true'
        run: |
          ./gradlew build --parallel

      - name: Coverage Report
        if: steps.changes.outputs.application == 'true'
        uses: madrapps/jacoco-report@v1.6.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          paths: |
            ${{ github.workspace }}/**/build/jacoco/jacoco.xml
          title: Code Coverage Report
          update-comment: true
          min-coverage-overall: '10'
          min-coverage-changed-files: '10'

  style-test:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4.1.7

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            application:
              - 'build.gradle'
              - 'src/**'

      - name: JDK 설치
        if: steps.changes.outputs.application == 'true'
        uses: actions/setup-java@v4.3.0
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'gradle'

      - name: Style Check
        if: steps.changes.outputs.application == 'true'
        run: |
          ./gradlew spotlessCheck
